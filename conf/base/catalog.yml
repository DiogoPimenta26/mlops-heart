# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataset
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataset
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataset
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different Dataset implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://docs.kedro.org/en/stable/data/data_catalog.html

heart_data_raw:
  type: pandas.CSVDataset
  filepath: data/01_raw/heart_statlog_cleveland_hungary_final.csv

ingested_data:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/ingested_data.csv

use_data:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/use_data.csv

test_data:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/test_data.csv

validated_data:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/validated.csv

report:
  type: pandas.CSVDataset
  filepath: data/08_reporting/validated.csv

clean_data:
  type: pandas.CSVDataset
  filepath: data/03_primary/clean_data.csv

use_preprocessed_data:
  type: pandas.CSVDataset
  filepath: data/03_primary/preprocessed_data.csv

use_features:
  type: pandas.CSVDataset
  filepath: data/04_feature/use_features.csv

use_aligned_features:
  type: pandas.CSVDataset
  filepath: data/04_feature/use_aligned_features.csv

test_preprocessed_data:
  type: pandas.CSVDataset
  filepath: data/03_primary/test_preprocessed_data.csv

test_features:
  type: pandas.CSVDataset
  filepath: data/04_feature/test_features.csv

test_aligned_features:
  type: pandas.CSVDataset
  filepath: data/04_feature/test_aligned_features.csv

X_train:
  type: pandas.CSVDataset
  filepath: data/05_model_input/X_train.csv
 
X_test:
  type: pandas.CSVDataset
  filepath: data/05_model_input/X_test.csv
  
y_train:
  type: pandas.CSVDataset
  filepath: data/05_model_input/y_train.csv

y_test:
  type: pandas.CSVDataset
  filepath: data/05_model_input/y_test.csv

selected_features:
  type: pandas.CSVDataset
  filepath: data/04_feature/selected_features.csv
  save_args:
    index: False

feature_importance_plot:
  type: kedro_datasets.matplotlib.MatplotlibWriter
  filepath: data/08_reporting/feature_importances.png

drift_result:
  type: pandas.CSVDataset
  filepath: data/08_reporting/drift_result.csv

best_columns:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pickle.PickleDataset
    filepath: data/06_models/best_cols.pkl

production_model_RF:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pickle.PickleDataset
    filepath: data/06_models/production_model_RF.pkl

production_columns_RF:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pickle.PickleDataset
    filepath: data/06_models/production_columns_RF.pkl
  
production_model_metrics_rf:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: json.JSONDataset
    filepath: data/08_reporting/production_model_metrics_rf.json
    
production_model_xgb:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pickle.PickleDataset
    filepath: data/06_models/production_model_xgb.pkl

production_columns_xgb:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pickle.PickleDataset
    filepath: data/06_models/production_columns_xgb.pkl
  
production_model_metrics_xgb:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: json.JSONDataset
    filepath: data/08_reporting/production_model_metrics_xgb.json

